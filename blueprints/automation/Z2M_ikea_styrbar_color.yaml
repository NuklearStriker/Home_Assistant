---
# This automation simulates the use of the IKEA STYRBAR Remote control
# connected through Zigbee2MQTT.

# | Button   | Action              |
# | -------- | ------------------- |
# | Up       | Switch on           |
# | Down     | Switch off |
# | Right    | Change color        |
# | Left     | Change saturation   |

blueprint:
  source_url: https://raw.githubusercontent.com/NuklearStriker/Home_Assistant/main/blueprints/automation/Z2M_ikea_styrbar_color.yaml

  name: Z2M - IKEA STYRBAR - Color Lights

  description: >-
    This automation simulates the use of the IKEA STYRBAR remote control
    connected through Z2M.

  domain: automation

  input:
    remote:
      name: IKEA STYRBAR remote control
      description: Select the remote control you wish to use.
      selector:
        entity:
          filter:
            domain: sensor

    target_light:
      name: Light
      description: Select the light entity you wish to control.
      selector:
        entity:
          domain: light

trigger:
  - platform: event
    event_type: 
    event_data:
      device_id: !input remote

condition: []

action:
  - variables:
      command: " {{ trigger.to_state.attributes.action }} "
      var_light: !input target_light
      
  - choose:
      # Short press on UP
      - conditions:
          - condition: template
            value_template: "{{ command == \"on\" }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input target_light
            data: {}

      # Long press on UP
      - condition:
          - condition: template
            value_template: "{{ command == \"brightness_move_up\" }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input target_light
            data: {}

      # Short press on DOWN
      - conditions:
          - condition: template
            value_template: "{{ command == \"off\" }}"
        sequence:
          - service: light.turn_off
            target:
              entity_id: !input target_light
            data: {}

      # Short press on LEFT
      - conditions:
          - condition: template
            value_template: "{{ command == \"arrow_left_click\" }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input target_light
            data:
              hs_color:
                - "{{ state_attr(var_light, \"hs_color\")[0] }}"
                - |-
                  {% if state_attr(var_light, "hs_color")[1] - 5 < 0 %}
                    {{ state_attr(var_light, "hs_color")[1] - 5 + 100 }}
                  {% else %}
                    {{ state_attr(var_light, "hs_color")[1] - 5 }}
                  {% endif %}

      # Short press on RIGHT
      - conditions:
          - condition: template
            value_template: "{{ command == \"arrow_right_click\" }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input target_light
            data:
              hs_color:
                - |-
                  {% if state_attr(var_light, "hs_color")[0] + 10 > 360 %}
                    {{ state_attr(var_light, "hs_color")[0] + 10 - 360 }}
                  {% else %}
                    {{ state_attr(var_light, "hs_color")[0] + 10 }}
                  {% endif %}
                - "{{ state_attr(var_light, \"hs_color\")[1] }}"
mode: single
