---
# This automation simulates the use of the IKEA TRADFRI Remote control
# connected through Zigbee2MQTT.
# Inspired by : source_url: https://github.com/niro1987/homeassistant-config/blob/main/blueprints/automation/niro1987/zha_ikea_tradfri_styrbar_color.yaml

blueprint:
  source_url: https://github.com/NuklearStriker/Home_Assistant/blob/main/blueprints/automation/Z2M_test.yaml

  name: Z2M - IKEA STYRBAR - Color Lights

  description: >-
    This automation simulates the use of the IKEA STYRBAR remote control
    connected through Z2M.

  domain: automation

  input:
    remote:
      name: IKEA STYRBAR remote control
      description: Select the remote control you wish to use.
      selector:
        entity:
          domain: sensor
          manufacturer: IKEA of Sweden
          model: Remote Control N2

    target_light:
      name: Light
      description: Select the light entity you wish to control.
      selector:
        target:
          entity:
            domain: light

    speed:
      name: Speed
      description: The speed in which to update the light when the button is held.
      selector:
        number:
          min: 100
          max: 1000
          step: 100
          unit_of_measurement: milliseconds
          mode: slider
      default: 500

mode: restart
max_exceeded: silent

variables:
  var_light: !input target_light
  var_speed: !input speed

trigger:
  - platform: state
    entity_id: !input 'remote'
    attribute: action
    
action:
  - variables:
      command: '{{ trigger.to_state.state }}'
  - choose:
      # Short-Press on the dim-up button.
      - conditions:
          - condition: template
            value_template: '{{ command == "on" }}'
        sequence:
          - service: light.turn_on
            target: !input target_light

      # Long-Press on the dim-up button.
      - conditions:
          - condition: template
            value_template: '{{ command == "brightness_move_up" }}'
        sequence:
          - service: light.turn_on
            target: !input target_light

      # Short-Press on the dim-down button.
      - conditions:
          - condition: template
            value_template: '{{ command == "off" }}'
        sequence:
          - service: light.turn_off
            target: !input target_light

      # Long-Press on the dim-down button.
      - conditions:
          - condition: template
            value_template: '{{ command == "brightness_move_down" }}'
        sequence:
          - service: light.turn_on
            target: !input target_light

      # Short-Press on the left button.
      - conditions:
          - condition: template
            value_template: '{{ command == "arrow_left_click" }}'
        sequence:
          - service: light.turn_on
            target: !input target_light

      # Long-Press on the left button.
      - conditions:
          - condition: template
            value_template: '{{ command == "arrow_left_hold" }}'
        sequence:
          - service: light.turn_on
            target: !input target_light

      # Short-Press on the right button.
      - conditions:
          - condition: template
            value_template: '{{ command == "arrow_right_click" }}'
        sequence:
          - service: light.turn_on
            target: !input target_light

      # Long-Press on the right button.
      - conditions:
          - condition: template
            value_template: '{{ command == "arrow_right_hold" }}'
        sequence:
          - service: light.turn_on
            target: !input target_light

    # Any other event will cancel the repeat loops.
    default: []
